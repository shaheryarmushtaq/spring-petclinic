# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

# name: Java CI with Maven

# on:
 # push:
  #  branches: [ main ]
 # pull_request:
  #  branches: [ main ]

#jobs:
 # build:

  #  runs-on: self-hosted
   # strategy:
    #  matrix:
     #3
    #   java: [ '17' ]

    #steps:
     # - uses: actions/checkout@v4
      #- name: Set up JDK ${{matrix.java}}
       # uses: actions/setup-java@v4
        #with:
         # java-version: ${{matrix.java}}
          #distribution: 'adopt'
          #cache: maven
      #- name: Build with Maven Wrapper
       # run: ./mvnw -B package



name: Java CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'
          cache: maven
      
      - name: Build with Maven Wrapper
        run: ./mvnw -B package

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: target/*.jar

  test:
    runs-on: ubuntu-latest
    needs: build  # Ensures tests run after the build stage
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven Wrapper
        run: ./mvnw -B package

      - name: Run Tests
        run: ./mvnw test

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensures deployment only occurs after the build stage
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > id_rsa
          chmod 600 id_rsa
          scp -i id_rsa -o StrictHostKeyChecking=no target/*.jar user@103.151.111.182:/path/to/deploy
          ssh -i id_rsa -o StrictHostKeyChecking=no user@103.151.111.182 'bash -s' < deploy-script.sh
# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: self-hosted
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v4
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven Wrapper
        run: ./mvnw -B package